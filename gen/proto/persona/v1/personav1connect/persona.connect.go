// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: proto/persona/v1/persona.proto

package personav1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/imkrish7/ecoship-api/gen/proto/perosona/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// PersonaServiceName is the fully-qualified name of the PersonaService service.
	PersonaServiceName = "proto.persona.v1.PersonaService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// PersonaServiceCreatePersonaProcedure is the fully-qualified name of the PersonaService's
	// CreatePersona RPC.
	PersonaServiceCreatePersonaProcedure = "/proto.persona.v1.PersonaService/CreatePersona"
	// PersonaServiceVerifyAccountProcedure is the fully-qualified name of the PersonaService's
	// VerifyAccount RPC.
	PersonaServiceVerifyAccountProcedure = "/proto.persona.v1.PersonaService/VerifyAccount"
	// PersonaServiceResendVerifyLinkProcedure is the fully-qualified name of the PersonaService's
	// ResendVerifyLink RPC.
	PersonaServiceResendVerifyLinkProcedure = "/proto.persona.v1.PersonaService/ResendVerifyLink"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	personaServiceServiceDescriptor                = v1.File_proto_persona_v1_persona_proto.Services().ByName("PersonaService")
	personaServiceCreatePersonaMethodDescriptor    = personaServiceServiceDescriptor.Methods().ByName("CreatePersona")
	personaServiceVerifyAccountMethodDescriptor    = personaServiceServiceDescriptor.Methods().ByName("VerifyAccount")
	personaServiceResendVerifyLinkMethodDescriptor = personaServiceServiceDescriptor.Methods().ByName("ResendVerifyLink")
)

// PersonaServiceClient is a client for the proto.persona.v1.PersonaService service.
type PersonaServiceClient interface {
	CreatePersona(context.Context, *connect.Request[v1.CreatePersonaRequest]) (*connect.Response[v1.CreatePersonaResponse], error)
	VerifyAccount(context.Context, *connect.Request[v1.VerifyAccountRequest]) (*connect.Response[v1.VerifyAccountResponse], error)
	ResendVerifyLink(context.Context, *connect.Request[v1.ResendVerifyLinkRequest]) (*connect.Response[v1.ResendVerifyLinkResponse], error)
}

// NewPersonaServiceClient constructs a client for the proto.persona.v1.PersonaService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewPersonaServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) PersonaServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &personaServiceClient{
		createPersona: connect.NewClient[v1.CreatePersonaRequest, v1.CreatePersonaResponse](
			httpClient,
			baseURL+PersonaServiceCreatePersonaProcedure,
			connect.WithSchema(personaServiceCreatePersonaMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		verifyAccount: connect.NewClient[v1.VerifyAccountRequest, v1.VerifyAccountResponse](
			httpClient,
			baseURL+PersonaServiceVerifyAccountProcedure,
			connect.WithSchema(personaServiceVerifyAccountMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		resendVerifyLink: connect.NewClient[v1.ResendVerifyLinkRequest, v1.ResendVerifyLinkResponse](
			httpClient,
			baseURL+PersonaServiceResendVerifyLinkProcedure,
			connect.WithSchema(personaServiceResendVerifyLinkMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// personaServiceClient implements PersonaServiceClient.
type personaServiceClient struct {
	createPersona    *connect.Client[v1.CreatePersonaRequest, v1.CreatePersonaResponse]
	verifyAccount    *connect.Client[v1.VerifyAccountRequest, v1.VerifyAccountResponse]
	resendVerifyLink *connect.Client[v1.ResendVerifyLinkRequest, v1.ResendVerifyLinkResponse]
}

// CreatePersona calls proto.persona.v1.PersonaService.CreatePersona.
func (c *personaServiceClient) CreatePersona(ctx context.Context, req *connect.Request[v1.CreatePersonaRequest]) (*connect.Response[v1.CreatePersonaResponse], error) {
	return c.createPersona.CallUnary(ctx, req)
}

// VerifyAccount calls proto.persona.v1.PersonaService.VerifyAccount.
func (c *personaServiceClient) VerifyAccount(ctx context.Context, req *connect.Request[v1.VerifyAccountRequest]) (*connect.Response[v1.VerifyAccountResponse], error) {
	return c.verifyAccount.CallUnary(ctx, req)
}

// ResendVerifyLink calls proto.persona.v1.PersonaService.ResendVerifyLink.
func (c *personaServiceClient) ResendVerifyLink(ctx context.Context, req *connect.Request[v1.ResendVerifyLinkRequest]) (*connect.Response[v1.ResendVerifyLinkResponse], error) {
	return c.resendVerifyLink.CallUnary(ctx, req)
}

// PersonaServiceHandler is an implementation of the proto.persona.v1.PersonaService service.
type PersonaServiceHandler interface {
	CreatePersona(context.Context, *connect.Request[v1.CreatePersonaRequest]) (*connect.Response[v1.CreatePersonaResponse], error)
	VerifyAccount(context.Context, *connect.Request[v1.VerifyAccountRequest]) (*connect.Response[v1.VerifyAccountResponse], error)
	ResendVerifyLink(context.Context, *connect.Request[v1.ResendVerifyLinkRequest]) (*connect.Response[v1.ResendVerifyLinkResponse], error)
}

// NewPersonaServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewPersonaServiceHandler(svc PersonaServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	personaServiceCreatePersonaHandler := connect.NewUnaryHandler(
		PersonaServiceCreatePersonaProcedure,
		svc.CreatePersona,
		connect.WithSchema(personaServiceCreatePersonaMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	personaServiceVerifyAccountHandler := connect.NewUnaryHandler(
		PersonaServiceVerifyAccountProcedure,
		svc.VerifyAccount,
		connect.WithSchema(personaServiceVerifyAccountMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	personaServiceResendVerifyLinkHandler := connect.NewUnaryHandler(
		PersonaServiceResendVerifyLinkProcedure,
		svc.ResendVerifyLink,
		connect.WithSchema(personaServiceResendVerifyLinkMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/proto.persona.v1.PersonaService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case PersonaServiceCreatePersonaProcedure:
			personaServiceCreatePersonaHandler.ServeHTTP(w, r)
		case PersonaServiceVerifyAccountProcedure:
			personaServiceVerifyAccountHandler.ServeHTTP(w, r)
		case PersonaServiceResendVerifyLinkProcedure:
			personaServiceResendVerifyLinkHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedPersonaServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedPersonaServiceHandler struct{}

func (UnimplementedPersonaServiceHandler) CreatePersona(context.Context, *connect.Request[v1.CreatePersonaRequest]) (*connect.Response[v1.CreatePersonaResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("proto.persona.v1.PersonaService.CreatePersona is not implemented"))
}

func (UnimplementedPersonaServiceHandler) VerifyAccount(context.Context, *connect.Request[v1.VerifyAccountRequest]) (*connect.Response[v1.VerifyAccountResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("proto.persona.v1.PersonaService.VerifyAccount is not implemented"))
}

func (UnimplementedPersonaServiceHandler) ResendVerifyLink(context.Context, *connect.Request[v1.ResendVerifyLinkRequest]) (*connect.Response[v1.ResendVerifyLinkResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("proto.persona.v1.PersonaService.ResendVerifyLink is not implemented"))
}
